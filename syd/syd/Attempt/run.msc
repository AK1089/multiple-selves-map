# run(Int attempt_number)

# if not first attempt, plays back all previous shadow iterations
# if not final attempt, records the next shadow iteration

@fast

@var syd::debug("running attempt {{attempt_number}}")

@for Int self in list::range(0, attempt_number - 1)
    @console /func execute syd::current_attempt[Player("{{this.player}}")].past_selves[{{self}}].playback()
    @var syd::debug("playing back PS#{{self}}")
@done

@if attempt_number != this.max_attempts
    @define syd::PastSelf new_shadow = syd::PastSelf()
    @var new_shadow.record(this.player, this.attempt_duration, system::currentTimeMillis())
    @var this.past_selves.append(new_shadow)
@fi